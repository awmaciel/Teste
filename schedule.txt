Schedule
https://codinginfinite.com/creating-scheduler-task-seconds-minutes-hours-days/
https://github.com/CodingInfinite/TaskScheduler



https://docs.microsoft.com/en-us/dotnet/api/system.data.common.dbdataadapter.update?redirectedfrom=MSDN&view=netframework-4.7.2#System_Data_Common_DbDataAdapter_Update_System_Data_DataTable_

public DataSet CreateCmdsAndUpdate(string connectionString,
    string queryString, string tableName) 
{
    using (OleDbConnection connection = new OleDbConnection(connectionString))
    {
        OleDbDataAdapter adapter = new OleDbDataAdapter();
        adapter.SelectCommand = new OleDbCommand(queryString, connection);
        OleDbCommandBuilder builder = new OleDbCommandBuilder(adapter);

        connection.Open();

        DataSet customers = new DataSet();
        adapter.Fill(customers);

        //code to modify data in dataset here

        adapter.Update(customers, tableName);

        return customers;
    }
}

http://dotnetmentors.com/adonet/datatable-comparison-using-linq-except-intersect-union.aspx
Console.WriteLine("Students enrolled only for Maths");

DataTable dtOnlyMaths = dtMaths.AsEnumerable().Except(
        dtEnglish.AsEnumerable(), DataRowComparer.Default).
            CopyToDataTable();

foreach(DataRow dr in dtOnlyMaths.Rows)
{
    Console.WriteLine(string.Format("StudentID: {0},
      StudentName: {1}", dr[0].ToString(), dr[1].ToString())); 
}


public static void Main()
{
    System.Timers.Timer aTimer = new System.Timers.Timer();
    aTimer.Elapsed+=new ElapsedEventHandler(OnTimedEvent);
    aTimer.Interval=5000;
    aTimer.Enabled=true;

    Console.WriteLine("Press \'q\' to quit the sample.");
    while(Console.Read()!='q');
}

 // Specify what you want to happen when the Elapsed event is raised.
 private static void OnTimedEvent(object source, ElapsedEventArgs e)
 {
     Console.WriteLine("Hello World!");
 }